{"meta":{"title":"Mr.zang 的博客","subtitle":null,"description":"Mr.zang 个人博客","author":"Mr.zang","url":"https://silencemrzang.github.io/MrZangBlog"},"pages":[{"title":"关于作者","date":"2019-08-10T02:24:47.796Z","updated":"2019-05-05T08:28:38.000Z","comments":true,"path":"about/index.html","permalink":"https://silencemrzang.github.io/MrZangBlog/about/index.html","excerpt":"","text":"Android 开发工程师前端小菜比 react react-native 栈热爱运动热爱音乐最爱打篮球 标准的科密坐标 中国 河南 郑州"},{"title":"类别","date":"2018-12-21T13:38:10.000Z","updated":"2019-03-07T10:03:16.000Z","comments":true,"path":"categories/index.html","permalink":"https://silencemrzang.github.io/MrZangBlog/categories/index.html","excerpt":"","text":""},{"title":"标签","date":"2018-12-21T13:37:34.000Z","updated":"2019-03-07T10:03:16.000Z","comments":true,"path":"tags/index.html","permalink":"https://silencemrzang.github.io/MrZangBlog/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"探究 Java Builder 模式","slug":"java_bulider","date":"2019-08-15T01:38:59.000Z","updated":"2019-08-15T13:47:24.819Z","comments":true,"path":"2019/08/15/java_bulider/","link":"","permalink":"https://silencemrzang.github.io/MrZangBlog/2019/08/15/java_bulider/","excerpt":"","text":"# Java 设计模式Builder 模式 Java Builder模式主要是用一个内部类去实例化一个对象，避免一个类出现过多构造函数，而且构造函数如果出现默认参数的话，很容易出错 Android Builder 模式 实践的第三方库 Glide 图片加载库 UCrop 图片裁剪 等 、、、 以UCrop 构建类 UCrop.java 为例 123456789UCrop.Options options = new UCrop.Options(); options.setHideBottomControls(true); options.setFreeStyleCropEnabled(clipBoxMove); //设置裁剪的图片质量，取值0-100 options.setCompressionQuality(compress); UCrop.of(Uri.parse(sourceFilePath), Uri.parse(outPutFilePath)) .withAspectRatio(scaleX, scaleY) .withOptions(options) .start(activity); 参数构造集 内部类 构造函数不对外开放 内部逻辑调用 123456private UCrop(@NonNull Uri source, @NonNull Uri destination) &#123; mCropIntent = new Intent(); mCropOptionsBundle = new Bundle(); mCropOptionsBundle.putParcelable(EXTRA_INPUT_URI, source); mCropOptionsBundle.putParcelable(EXTRA_OUTPUT_URI, destination);&#125; 公开 静态方法 供外部调用 12345678910/** * This method creates new Intent builder and sets both * source and destination image URIs. * * @param source Uri for image to crop * @param destination Uri for saving the cropped image */ public static UCrop of(@NonNull Uri source, @NonNull Uri destination) &#123; return new UCrop(source, destination); &#125; 参数集合 赋值给 Ucrop 构造类1234public UCrop withOptions(@NonNull Options options) &#123; mCropOptionsBundle.putAll(options.getOptionBundle()); return this; &#125; 1234567891011121314151617181920/** * Get Intent to start &#123;@link UCropActivity&#125; * * @return Intent for &#123;@link UCropActivity&#125; */ public Intent getIntent(@NonNull Context context) &#123; mCropIntent.setClass(context, UCropActivity.class); mCropIntent.putExtras(mCropOptionsBundle); return mCropIntent; &#125; /** * Send the crop Intent from an Activity with a custom request code * * @param activity Activity to receive result * @param requestCode requestCode for result */ public void start(@NonNull Activity activity, int requestCode) &#123; activity.startActivityForResult(getIntent(activity), requestCode); &#125;","categories":[{"name":"Android","slug":"Android","permalink":"https://silencemrzang.github.io/MrZangBlog/categories/Android/"},{"name":"Java","slug":"Android/Java","permalink":"https://silencemrzang.github.io/MrZangBlog/categories/Android/Java/"}],"tags":[{"name":"Android","slug":"Android","permalink":"https://silencemrzang.github.io/MrZangBlog/tags/Android/"},{"name":"Builder","slug":"Builder","permalink":"https://silencemrzang.github.io/MrZangBlog/tags/Builder/"}],"keywords":[{"name":"Android","slug":"Android","permalink":"https://silencemrzang.github.io/MrZangBlog/categories/Android/"},{"name":"Java","slug":"Android/Java","permalink":"https://silencemrzang.github.io/MrZangBlog/categories/Android/Java/"}]},{"title":"Hello World","slug":"hello-world","date":"2019-08-08T09:30:57.050Z","updated":"2019-08-08T02:23:34.000Z","comments":true,"path":"2019/08/08/hello-world/","link":"","permalink":"https://silencemrzang.github.io/MrZangBlog/2019/08/08/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[],"keywords":[]},{"title":"flutter_02","slug":"flutter-02","date":"2019-08-08T07:05:26.000Z","updated":"2019-08-08T07:05:38.000Z","comments":true,"path":"2019/08/08/flutter-02/","link":"","permalink":"https://silencemrzang.github.io/MrZangBlog/2019/08/08/flutter-02/","excerpt":"","text":"","categories":[],"tags":[{"name":"flutter","slug":"flutter","permalink":"https://silencemrzang.github.io/MrZangBlog/tags/flutter/"}],"keywords":[]},{"title":"flutter_01","slug":"flutter-01","date":"2019-08-08T07:03:05.000Z","updated":"2019-08-08T07:06:02.000Z","comments":true,"path":"2019/08/08/flutter-01/","link":"","permalink":"https://silencemrzang.github.io/MrZangBlog/2019/08/08/flutter-01/","excerpt":"","text":"","categories":[],"tags":[{"name":"flutter","slug":"flutter","permalink":"https://silencemrzang.github.io/MrZangBlog/tags/flutter/"}],"keywords":[]},{"title":"hexo_init","slug":"hexo-init","date":"2019-08-08T07:00:54.000Z","updated":"2019-08-08T07:17:00.000Z","comments":true,"path":"2019/08/08/hexo-init/","link":"","permalink":"https://silencemrzang.github.io/MrZangBlog/2019/08/08/hexo-init/","excerpt":"","text":"# 搭建环境： 下载node install git npm –version npm install -g hexo-cli # 初始化： hexo init {your blog name} cd hexo {your blog name} npm install hexo server 本地运行查看 # 配置：12345678910111213141516171819202122232425262728# Sitetitle: xxxsubtitle:description: xxxkeywords:author: xxxlanguage: zh-Hans timezone:# URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: https://xxxx.github.io/xxxx/ &#123;你要部署仓库的Page地址&#125;root: /xxxx/permalink: :year/:month/:day/:title/permalink_defaults:# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: next# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repository: https://github.com/xxxx/xxxx.git branch: master 123456789101112131415161718192021&#123; \"name\": \"hexo-site\", \"version\": \"0.0.0\", \"private\": true, \"hexo\": &#123; \"version\": \"3.9.0\" &#125;, \"dependencies\": &#123; \"hexo\": \"^3.9.0\", \"hexo-asset-image\": \"0.0.3\", \"hexo-generator-archive\": \"^0.1.5\", \"hexo-generator-category\": \"^0.1.3\", \"hexo-generator-index\": \"^0.2.1\", \"hexo-generator-tag\": \"^0.2.0\", \"hexo-renderer-ejs\": \"^0.3.1\", \"hexo-renderer-stylus\": \"^0.3.3\", \"hexo-renderer-marked\": \"^1.0.1\", \"hexo-deployer-git\": \"^0.3.1\", //git 包 \"hexo-server\": \"^0.3.3\" &#125;&#125; # hexo 命令 编译 hexo g 清除 hexo clean 运行 hexo s 提交仓库 hexo d","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://silencemrzang.github.io/MrZangBlog/tags/hexo/"}],"keywords":[]}]}